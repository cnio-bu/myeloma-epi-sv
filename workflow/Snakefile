import os

configfile:"config/config.yaml"

try:
    config["paths"]["models"] = os.environ['ONT_BC_MODELS']
except KeyError:
    pass

def input_main(wc):
    for sid in ['mysample']:
        for bc in config["basecallers"]:
            for mod in config["basecallers"][bc]["models"]:
                yield f"results/qsfilter/{sid}/dorado_{mod}_gt_08.bam" 

rule main:
    input: input_main

rule basecall_dorado:
    input: config["paths"]["pod5"]
    output: "results/basecall/{sampleid}/dorado_{model}.bam"
    params:
        bin=config["basecallers"]["dorado"]["bin"],
        modelspath=config["paths"]["models"]
    shell:"""
        {params.bin} basecaller {params.modelspath}/{wildcards.model} {input} > {output}
    """

def getcmp(wc):
    if wc.cmp == "ge":
        return ">="
    elif wc.cmp == "gt":
        return ">"
    elif wc.cmp == "le":
        return "<="
    elif wc.cmp == "lt":
        return "<"
    else:
        raise ValueError(f"Operator {wc.cmp} not recognised")

rule qsfilter:
    input: "results/basecall/{sampleid}/{basecaller}_{model}.bam"
    output: "results/qsfilter/{sampleid}/{basecaller}_{model}_{cmp}_{qscore}.bam"
    params:
        cmp=getcmp,
        qscore=lambda wc: wc.qscore.lstrip("0")
    shell:"""
        samtools view -e '[qs]{params.cmp}{params.qscore}' {input} > {output}
    """
